@model DTOsLayer.WebUIDTO.FeatureDTO.UpdateFeatureDTO
@using DTOsLayer.WebUIDTO.FeatureImageDTO // ResultFeatureImageDTO için
@{
    ViewData["Title"] = "Özellik Güncelle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var existingImages = ViewBag.ExistingImages as List<ResultFeatureImageDTO>; // Mevcut resimler ViewBag'den alınır
}

<header class="header">
    <div>
        <h2>Özellik Güncelle</h2>
        <p style="color: rgba(255, 255, 255, 0.7); margin-top: 0.5rem;">Mevcut özellik bilgilerini güncelleyin.</p>
    </div>
    <div class="user-info">
        <div class="user-avatar">AK</div>
        <div>
            <div>Admin Kullanıcı</div>
            <div style="font-size: 0.8rem; opacity: 0.7;">admin@example.com</div>
        </div>
    </div>
</header>

<div class="form-card">
    <form asp-controller="Feature" asp-action="Edit" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="FeatureId" />

        <div class="mb-3">
            <label for="title" class="form-label">Başlık</label>
            <input type="text" asp-for="Title" class="form-control" id="title" placeholder="Başlık girin" required>
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="smallTitle" class="form-label">Küçük Başlık</label>
            <input type="text" asp-for="SmallTitle" class="form-control" id="smallTitle" placeholder="Küçük başlık girin" required>
            <span asp-validation-for="SmallTitle" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Açıklama</label>
            <textarea asp-for="Description" class="form-control" id="description" rows="3" placeholder="Açıklama girin" required></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        @if (existingImages != null && existingImages.Any())
        {
                <div class="mb-4">
                    <label class="form-label">
                        <strong>Mevcut Resimler:</strong>
                        <small class="text-muted">(Kaldırmak istediğiniz resimleri işaretleyin)</small>
                    </label>
                    <div class="existing-images-container">
                    @foreach (var image in existingImages)
                    {
                                <div class="existing-image-item" data-image-id="@image.FeatureImageId">
                                    <div class="image-wrapper">
                                        <img src="@image.ImageUrl" alt="Özellik Resmi">
                                        <div class="image-overlay">
                                            <button type="button" class="remove-existing-btn" onclick="toggleRemoveImage(@image.FeatureImageId)" title="Kaldır">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                        <div class="image-checkbox">
                                            <input type="checkbox" name="ImageIdsToRemove" value="@image.FeatureImageId" id="removeImage_@image.FeatureImageId" style="display: none;" />
                                            <div class="checkbox-indicator" id="indicator_@image.FeatureImageId">
                                                <span class="remove-text">Kaldırılacak</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-name">@image.FileName</div>
                                </div>
                    }
                    </div>
                </div>
        }
        else
        {
                <div class="mb-3">
                    <p class="text-muted">Mevcut resim yok.</p>
                </div>
        }

        <div class="mb-3">
            <label for="newImageFiles" class="form-label">Yeni Resimler Ekle (Birden fazla seçebilirsiniz)</label>
            <input type="file" name="NewImageFiles" class="form-control" id="newImageFiles" multiple accept="image/*">
            <span asp-validation-for="NewImageFiles" class="text-danger"></span>

            <div id="newImagePreviewContainer" class="mt-3" style="display: none;">
                <label class="form-label">Eklenecek Yeni Resimler:</label>
                <div id="newImagePreviewWrapper" class="new-images-container"></div>
            </div>
        </div>

        <div class="d-flex justify-content-end">
            <a href="/Feature/Index" class="btn btn-secondary me-2">İptal</a>
            <button type="submit" class="btn btn-primary">Güncelle</button>
        </div>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </form>
</div>

<style>
    .existing-images-container, .new-images-container {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-top: 10px;
    }

    .existing-image-item, .new-image-item {
        position: relative;
        border: 2px solid #ddd;
        border-radius: 8px;
        padding: 8px;
        background: #f8f9fa;
        width: 180px;
        transition: all 0.3s ease;
    }

    .existing-image-item.marked-for-removal {
        border-color: #dc3545;
        background: #f8d7da;
        opacity: 0.7;
    }

    .image-wrapper {
        position: relative;
        width: 100%;
        height: 140px;
        overflow: hidden;
        border-radius: 4px;
    }

    .image-wrapper img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .existing-image-item:hover .image-overlay {
        opacity: 1;
    }

    .remove-existing-btn {
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        font-size: 16px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background 0.3s ease;
    }

    .remove-existing-btn:hover {
        background: #c82333;
    }

    .image-checkbox {
        position: absolute;
        top: -10px;
        right: -10px;
    }

    .checkbox-indicator {
        background: #dc3545;
        color: white;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 10px;
        font-weight: bold;
        display: none;
    }

    .existing-image-item.marked-for-removal .checkbox-indicator {
        display: block;
    }

    .image-name {
        font-size: 12px;
        color: #666;
        margin-top: 8px;
        text-align: center;
        word-break: break-all;
    }

    .new-image-item {
        border-color: #28a745;
        background: #d4edda;
    }

    .new-image-item .remove-new-btn {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        font-size: 12px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .new-image-item .remove-new-btn:hover {
        background: #c82333;
    }

    .new-image-item img {
        width: 100%;
        height: 120px;
        object-fit: cover;
        border-radius: 4px;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

        <script>
            function toggleRemoveImage(imageId) {
                const checkbox = document.getElementById(`removeImage_${imageId}`);
                const imageItem = document.querySelector(`[data-image-id="${imageId}"]`);

                checkbox.checked = !checkbox.checked;

                if (checkbox.checked) {
                    imageItem.classList.add('marked-for-removal');
                } else {
                    imageItem.classList.remove('marked-for-removal');
                }
            }

            document.addEventListener('DOMContentLoaded', function() {
                const fileInput = document.getElementById('newImageFiles');
                const previewContainer = document.getElementById('newImagePreviewContainer');
                const previewWrapper = document.getElementById('newImagePreviewWrapper');
                let selectedFiles = [];

                fileInput.addEventListener('change', function(e) {
                    const files = Array.from(e.target.files);

                    files.forEach(file => {
                        if (file.type.startsWith('image/')) {
                            selectedFiles.push(file);
                        }
                    });

                    updateNewImagePreview();
                    updateFileInput();
                });

                function updateNewImagePreview() {
                    previewWrapper.innerHTML = '';

                    if (selectedFiles.length === 0) {
                        previewContainer.style.display = 'none';
                        return;
                    }

                    previewContainer.style.display = 'block';

                    selectedFiles.forEach((file, index) => {
                        const reader = new FileReader();

                        reader.onload = function(e) {
                            const previewItem = document.createElement('div');
                            previewItem.className = 'new-image-item';

                            previewItem.innerHTML = `
                                <button type="button" class="remove-new-btn" onclick="removeNewImage(${index})" title="Resmi Kaldır">
                                    ×
                                </button>
                                <img src="${e.target.result}" alt="Yeni Resim">
                                <div class="image-name">${file.name}</div>
                            `;

                            previewWrapper.appendChild(previewItem);
                        };

                        reader.readAsDataURL(file);
                    });
                }

                function updateFileInput() {
                    const dt = new DataTransfer();
                    selectedFiles.forEach(file => {
                        dt.items.add(file);
                    });
                    fileInput.files = dt.files;
                }

                window.removeNewImage = function(index) {
                    selectedFiles.splice(index, 1);
                    updateNewImagePreview();
                    updateFileInput();
                };
            });
        </script>
}